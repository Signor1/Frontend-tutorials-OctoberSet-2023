/* Varibales in CSS */
:root {
    scroll-behavior: smooth;
    --color1: khaki;
    --color2: coral;
    --color3: brown;
    --linearGradient: linear-gradient(to right, var(--color1), var(--color2), var(--color3));
    --radialGradient: radial-gradient(circle, var(--color2), var(--color1));
}

/* Pseudo classes for anchor */
.links {
    display: flex;
    justify-content: center;
    gap: 2rem;

}

a:link {
    color: brown;
    text-decoration: none;
    font-family: sans-serif;
    padding: 6px 15px;
}

a:visited {
    color: forestgreen;
}

a:hover {
    color: white;
    background-color: brown;
}

a:active {
    color: white;
    background-color: #111;
}

a:focus {
    color: blue;
    border: 1px solid blue;
}


/* Pseudo class for children */
ul {
    list-style: decimal-leading-zero;
}

/* ul>li:first-child {
    color: goldenrod;
    font-size: 1.4rem;
    font-family: cursive;
} */

/* ul>li:last-child {
    color: goldenrod;
    font-size: 1.4rem;
    font-family: cursive;
} */

/* for nth child you can use numbers, even and odd */
/* ul>li:nth-child(odd) {
    color: goldenrod;
    font-size: 1.4rem;
    font-family: cursive;
} */

ul>li:only-child {
    color: darkcyan;
}

/* Pseudo classes for targetting a type of an element */
section h1:first-of-type {
    color: red;
    text-align: center;
}

section p:last-of-type {
    color: springgreen;
}

section h3:only-of-type {
    color: firebrick;
}

/* even, odd, numbers  */
section h1:nth-of-type(2) {
    color: violet;
}


/* Applying the variables */
aside {
    width: 100%;
    height: 150px;
    background-image: var(--linearGradient);
    display: flex;
    justify-content: center;
    align-items: center;
}

aside h1 {
    color: var(--color3);
    font-family: sans-serif;
    font-size: 1cm;
}

/* pseudo class of range */
input[type=number] {
    width: 500px;
    height: 35px;
    display: block;
    margin: 2rem auto;
    outline: none;
}

input[type=number]:in-range {
    border: 3px solid green;
}

input[type=number]:out-of-range {
    border: 3px solid red;
}


/* Pseudo class of target */
article {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    margin-block: 4rem;
    gap: 3rem;
}

article main {
    display: flex;
    gap: 2rem;
}

article main div {
    transition: 2s;
    width: 200px;
    height: 200px;
    background-color: var(--color3);
}

article main div:target {
    background-color: var(--color1);
    border-radius: 50%;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Pseudo class for valid and invalid */
form {
    width: 500px;
    height: auto;
    border: 1px solid #222;
    display: flex;
    flex-direction: column;
    margin: 2rem auto;
    padding: 2rem;
    gap: 1rem;
}

form>div {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

form input {
    width: 100%;
    height: 35px;
    outline: none;
    border: 1px solid #222;
    border-radius: 5px;
    padding-inline: 0.7rem;
}

/* validation */
form input:valid~.success {
    display: block;
}

form input:invalid~.error {
    display: block;
}

form span {
    font-size: 0.9rem;
    font-family: sans-serif;
    display: none;
}

form span.error {
    color: red;
}

form span.success {
    color: green;
}

form button {
    margin-top: 1rem;
    padding: 10px 20px;
    background-color: #222;
    color: white;
    border: none;
    outline: none;
    border-radius: 5px;
    cursor: pointer;
}